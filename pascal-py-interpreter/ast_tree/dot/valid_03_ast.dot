digraph astgraph {
  node [shape=circle, fontsize=12, fontname="Courier", height=.1];
  ranksep=.3;
  edge [arrowsize=.5]
  node1 [label="Program"]
  node2 [label="Block"]
  node3 [label="VarDecl"]
  node4 [label="C"]
  node3 -> node4
  node5 [label="INTEGER"]
  node3 -> node5
  node6 [label="FuncDecl:PYTHAGORASFUNC => REAL"]
  node7 [label="Param"]
  node8 [label="A"]
  node7 -> node8
  node9 [label="REAL"]
  node7 -> node9
  node6 -> node7
  node10 [label="Param"]
  node11 [label="B"]
  node10 -> node11
  node12 [label="REAL"]
  node10 -> node12
  node6 -> node10
  node13 [label="Block"]
  node14 [label="Compound"]
  node15 [label=":="]
  node16 [label="PYTHAGORASFUNC"]
  node17 [label="+"]
  node18 [label="*"]
  node19 [label="A"]
  node20 [label="A"]
  node18 -> node19
  node18 -> node20
  node21 [label="*"]
  node22 [label="B"]
  node23 [label="B"]
  node21 -> node22
  node21 -> node23
  node17 -> node18
  node17 -> node21
  node15 -> node16
  node15 -> node17
  node14 -> node15
  node24 [label="NoOp"]
  node14 -> node24
  node13 -> node14
  node6 -> node13
  node25 [label="ProcDecl:ALPHA"]
  node26 [label="Param"]
  node27 [label="A"]
  node26 -> node27
  node28 [label="INTEGER"]
  node26 -> node28
  node25 -> node26
  node29 [label="Param"]
  node30 [label="B"]
  node29 -> node30
  node31 [label="INTEGER"]
  node29 -> node31
  node25 -> node29
  node32 [label="Block"]
  node33 [label="VarDecl"]
  node34 [label="X"]
  node33 -> node34
  node35 [label="INTEGER"]
  node33 -> node35
  node36 [label="ProcDecl:BETA"]
  node37 [label="Param"]
  node38 [label="A"]
  node37 -> node38
  node39 [label="INTEGER"]
  node37 -> node39
  node36 -> node37
  node40 [label="Param"]
  node41 [label="B"]
  node40 -> node41
  node42 [label="INTEGER"]
  node40 -> node42
  node36 -> node40
  node43 [label="Block"]
  node44 [label="VarDecl"]
  node45 [label="X"]
  node44 -> node45
  node46 [label="INTEGER"]
  node44 -> node46
  node47 [label="VarDecl"]
  node48 [label="Y"]
  node47 -> node48
  node49 [label="INTEGER"]
  node47 -> node49
  node50 [label="Compound"]
  node51 [label=":="]
  node52 [label="X"]
  node53 [label="+"]
  node54 [label="+"]
  node55 [label="*"]
  node56 [label="A"]
  node57 [label="10"]
  node55 -> node56
  node55 -> node57
  node58 [label="*"]
  node59 [label="B"]
  node60 [label="2"]
  node58 -> node59
  node58 -> node60
  node54 -> node55
  node54 -> node58
  node61 [label="*"]
  node62 [label="C"]
  node63 [label="2"]
  node61 -> node62
  node61 -> node63
  node53 -> node54
  node53 -> node61
  node51 -> node52
  node51 -> node53
  node50 -> node51
  node64 [label=":="]
  node65 [label="Y"]
  node66 [label="X"]
  node64 -> node65
  node64 -> node66
  node50 -> node64
  node67 [label="NoOp"]
  node50 -> node67
  node43 -> node44
  node43 -> node47
  node43 -> node50
  node36 -> node43
  node68 [label="Compound"]
  node69 [label=":="]
  node70 [label="X"]
  node71 [label="*"]
  node72 [label="+"]
  node73 [label="A"]
  node74 [label="B"]
  node72 -> node73
  node72 -> node74
  node75 [label="2"]
  node71 -> node72
  node71 -> node75
  node69 -> node70
  node69 -> node71
  node68 -> node69
  node76 [label="ProcCall:BETA"]
  node77 [label="5"]
  node76 -> node77
  node78 [label="10"]
  node76 -> node78
  node68 -> node76
  node79 [label="NoOp"]
  node68 -> node79
  node32 -> node33
  node32 -> node36
  node32 -> node68
  node25 -> node32
  node80 [label="Compound"]
  node81 [label=":="]
  node82 [label="C"]
  node83 [label="20"]
  node81 -> node82
  node81 -> node83
  node80 -> node81
  node84 [label="ProcCall:ALPHA"]
  node85 [label="+"]
  node86 [label="3"]
  node87 [label="5"]
  node85 -> node86
  node85 -> node87
  node84 -> node85
  node88 [label="7"]
  node84 -> node88
  node80 -> node84
  node89 [label="NoOp"]
  node80 -> node89
  node2 -> node3
  node2 -> node6
  node2 -> node25
  node2 -> node80
  node1 -> node2
}